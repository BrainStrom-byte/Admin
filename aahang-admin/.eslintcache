[{"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\index.js":"1","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\App.js":"2","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\reportWebVitals.js":"3","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Reducers\\rootReducer.js":"4","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Pages\\login.js":"5","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\firebase.js":"6","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Pages\\Dashboard.js":"7","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Authenticated.js":"8","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Pages\\Login.js":"9","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Fragments\\HomeFragment.js":"10","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\BannerSlidder.js":"11","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\ServiceView.js":"12","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\HorizontalScroller.js":"13","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\StripAdView.js":"14","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\GridView.js":"15","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Reducers\\categoryReducer.js":"16","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Actions\\categoryAction.js":"17","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Reducers\\categoryPageReducer.js":"18","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Actions\\categoryPageAction.js":"19","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Fragments\\ManageCategoryFragment.js":"20"},{"size":1230,"mtime":1606899533765,"results":"21","hashOfConfig":"22"},{"size":634,"mtime":1606999163152,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":424,"mtime":1607249715631,"results":"25","hashOfConfig":"22"},{"size":3988,"mtime":1606999163135,"results":"26","hashOfConfig":"22"},{"size":914,"mtime":1608384191108,"results":"27","hashOfConfig":"22"},{"size":3937,"mtime":1608357491669,"results":"28","hashOfConfig":"22"},{"size":874,"mtime":1606998973571,"results":"29","hashOfConfig":"22"},{"size":3988,"mtime":1606999163135,"results":"30","hashOfConfig":"22"},{"size":32539,"mtime":1608357676773,"results":"31","hashOfConfig":"22"},{"size":2505,"mtime":1608284311107,"results":"32","hashOfConfig":"22"},{"size":910,"mtime":1607517573849,"results":"33","hashOfConfig":"22"},{"size":1687,"mtime":1608284379469,"results":"34","hashOfConfig":"22"},{"size":1416,"mtime":1608284379469,"results":"35","hashOfConfig":"22"},{"size":1805,"mtime":1608284379469,"results":"36","hashOfConfig":"22"},{"size":314,"mtime":1607166607316,"results":"37","hashOfConfig":"22"},{"size":656,"mtime":1607237098157,"results":"38","hashOfConfig":"22"},{"size":350,"mtime":1607244060901,"results":"39","hashOfConfig":"22"},{"size":775,"mtime":1608043770641,"results":"40","hashOfConfig":"22"},{"size":1515,"mtime":1608384191108,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1gb18zw",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":9,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\index.js",[],["91","92"],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\App.js",["93"],"\nimport React from \"react\";\nimport './App.css';\nimport { Redirect, Route,Switch } from 'react-router-dom';\nimport Login from './Pages/Login';\nimport Dashboard from \"./Pages/Dashboard\";\nimport Authenticated from \"./Components/Authenticated\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Authenticated>\n        <Dashboard/>\n        </Authenticated>\n      </Route>\n      <Route exact path=\"/login\">\n      <Authenticated nonAuthenticated={true}>\n       <Login />\n        </Authenticated>\n        </Route>\n      <Route path=\"*\" render={() => \"404 Not found!\"}/>\n    </Switch>\n  );\n}\n\nexport default App;\n","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\reportWebVitals.js",[],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Reducers\\rootReducer.js",[],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Pages\\login.js",["94","95","96","97","98","99","100","101","102"],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\firebase.js",[],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Pages\\Dashboard.js",["103"],"import React,{ useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport logo from '../media/logo.jpeg';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Build, Category, Home, PowerSettingsNew, Settings, ShoppingCart} from \"@material-ui/icons\"\r\nimport HomeFragment from \"../Fragments/HomeFragment\"\r\nimport ManageCategoryFragment from '../Fragments/ManageCategoryFragment';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function ClippedDrawer() {\r\n  const classes = useStyles();\r\n\r\n  const [fragment, setFragment] =  useState(\"HOME\")\r\n\r\n  const loadFragment = () =>{\r\n\r\n    switch (fragment) {\r\n      case \"HOME\":\r\n      return <HomeFragment/>\r\n\r\n      case \"MANAGE_CATEGORY\":\r\n      return <ManageCategoryFragment/>\r\n    \r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n          <img src={logo} height=\"35px\" style={{marginRight:\"16px\"}} />\r\n          <Typography variant=\"h3\"  display=\"inline\">Aahang Admin </Typography>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n           \r\n              <ListItem button onClick={e=>setFragment(\"HOME\")}>\r\n                  <ListItemIcon>\r\n                      <Home/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Home\" />\r\n              </ListItem>\r\n              <ListItem button onClick={e=>setFragment(\"MANAGE_CATEGORY\")}>\r\n                  <ListItemIcon>\r\n                      <Category/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Categories\" />\r\n              </ListItem>\r\n              <ListItem button >\r\n                  <ListItemIcon>\r\n                      <Build/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Service\" />\r\n              </ListItem>\r\n              <ListItem button >\r\n                  <ListItemIcon>\r\n                      <ShoppingCart/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Orders\" />\r\n              </ListItem>\r\n              <ListItem button >\r\n                  <ListItemIcon>\r\n                      <Settings/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Setting\" />\r\n              </ListItem>\r\n              <Divider/>\r\n              <ListItem button >\r\n                  <ListItemIcon>\r\n                      <PowerSettingsNew/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Logout\" />\r\n              </ListItem>\r\n          </List>\r\n          <Divider />\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n      {loadFragment()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Authenticated.js",[],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Pages\\Login.js",["104","105","106","107","108","109","110","111","112"],"import { Box, Button, CircularProgress, Container, TextField, Typography } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport logo from '../media/logo.jpeg';\r\nimport { firebaseAuth , firestore } from \"../firebase\";\r\n class Login extends Component {\r\n\r\n      constructor(props) {\r\n        super(props)\r\n      \r\n        this.state = {\r\n           email:\"\",\r\n           password:\"\",\r\n           show_progress:false,\r\n        };\r\n        this.handleChange = this.handleChange.bind();\r\n        this.login = this.login.bind();\r\n      }\r\n      \r\n      handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n       \r\n      login = () => {\r\n\r\n        let valid_data = true;\r\n        this.state.email_error = null;\r\n        this.state.password_error = null;\r\n        if(this.state.email === \"\")\r\n        {\r\n          this.state.email_error =\"Required!\";\r\n          valid_data=false\r\n        }\r\n        if(this.state.password === \"\")\r\n        {\r\n          this.state.password_error =\"Required!\";\r\n          valid_data=false\r\n        }\r\n\r\n        if(valid_data)\r\n        {\r\n          this.state.show_progress = true;\r\n        }\r\n        this.setState({\r\n          update:true,\r\n        });\r\n\r\n        if(valid_data)\r\n        {\r\n         firestore.collection(\"USERS\").where('email','==',this.state.email)\r\n          .where('IsAdmin','==',true)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            if(!querySnapshot.empty)\r\n            {\r\n\r\n              firebaseAuth.\r\n              signInWithEmailAndPassword(\r\n                this.state.email,\r\n                this.state.password\r\n              ).then((res) => {\r\n\r\n                this.props.history.replace(\"/\")\r\n              }).catch(err=>{\r\n               if(err.code==='auth/wrong-password')\r\n               {\r\n                 this.state.password_error=\"Incorrect Password!\"\r\n               }\r\n                this.setState({\r\n                  show_progress:false,\r\n                });\r\n              })\r\n              \r\n            }\r\n            else{\r\n                  this.state.email_error = \"Not Allowed!\";\r\n                  this.setState({\r\n                    show_progress:false,\r\n                  });\r\n            }\r\n          });\r\n         \r\n        }\r\n       \r\n      };\r\n\r\n    render() {\r\n        return <Container maxWidth=\"xs\">\r\n         <Box bgcolor=\"white\" \r\n         boxShadow=\"3\" \r\n         borderRadius=\"10px\"\r\n         textAlign=\"center\"\r\n         p=\"24px\"\r\n         mt=\"50px\" >\r\n             <img src={logo} height=\"50px\"/>\r\n             <Typography variant=\"h5\" color= \"textSecondary\" >\r\n                 ADMIN\r\n             </Typography>\r\n\r\n         <TextField\r\n          label=\"Email\"\r\n          id=\"outlined-size-small\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          fullWidth\r\n          name=\"email\"\r\n          error={this.state.email_error != null}\r\n          helperText={this.state.email_error}\r\n          onChange={this.handleChange}\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n        />\r\n         <TextField\r\n          label=\"Password\"\r\n          id=\"outlined-size-small\"\r\n          type=\"password\"\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          name=\"password\"\r\n          error={this.state.password_error != null}\r\n          helperText={this.state.password_error}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n        />\r\n        <br/>\r\n        <br/>\r\n        {this.state.show_progress? (\r\n        <CircularProgress size={25} thickness={4} color=\"secondary\" />\r\n         ) :null}\r\n        <br/>\r\n        <br/>\r\n        <Button \r\n        variant=\"contained\" \r\n        color=\"primary\" \r\n        onClick={this.login}\r\n        fullWidth \r\n        >\r\n          login\r\n        </Button>\r\n             \r\n         </Box>\r\n        </Container>;\r\n        \r\n    }\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Fragments\\HomeFragment.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Avatar, Backdrop, Container,CircularProgress, Fab , Dialog, Toolbar, IconButton,Slide,Button,FormControl,InputLabel,Select,MenuItem, TextField, Checkbox, FormControlLabel, Snackbar,  } from '@material-ui/core';\r\nimport BannerSlider from \"../Components/BannerSlidder\"\r\nimport ServiceView from '../Components/ServiceView';\r\nimport HorizontalScroller from '../Components/HorizontalScroller';\r\nimport StripAdView from '../Components/StripAdView';\r\nimport GridView from '../Components/GridView';\r\nimport { Category, Home , Add ,Close,Delete,ColorLens,} from \"@material-ui/icons\"\r\nimport { connect } from 'react-redux';\r\nimport { loadCategories, } from '../Components/Actions/categoryAction';\r\nimport categoryReducer from '../Components/Reducers/categoryReducer';\r\nimport {  loadCategoryPage } from '../Components/Actions/categoryPageAction';\r\nimport { firestore , storageRef} from '../firebase';\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nexport class HomeFragment extends Component {\r\n   \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            loading:true,\r\n            value:0,\r\n            Page:\"HOME\",\r\n            addDialog: false,\r\n            images: [],\r\n            colors: [],\r\n            selectedServices: [],\r\n            positionError:\"\",\r\n            layout_titleError:\"\",\r\n            snackbar:\"\",\r\n            Layout_Background:\"ffffff\",\r\n            \r\n            view_type:0,\r\n        }\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({\r\n            value:newValue\r\n        })\r\n      };\r\n\r\n         loadLatestService = () =>{\r\n          firestore\r\n          .collection(\"SERVICE PROVIDER\")\r\n          .orderBy('added_on',\"desc\").limit(8)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n              let servicelist = []\r\n           if(!querySnapshot.empty)\r\n           {\r\n              querySnapshot.forEach((doc) => {\r\n                let data = {\r\n                  id : doc.id,\r\n                  image :doc.data().service_provider_image_1,\r\n                  title : doc.data().service_provider_name,\r\n                  price : doc.data().service_charge,\r\n                }\r\n                \r\n                 servicelist.push(data);\r\n                });\r\n                \r\n           }\r\n           this.setState({\r\n             servicelist,\r\n           })\r\n            \r\n      }).catch((error) =>{\r\n          console.log(error);\r\n        \r\n      });\r\n         };\r\n\r\n         searchService = () =>{\r\n\r\n          if(!this.state.search){\r\n            this.loadLatestService();\r\n            return;\r\n          }\r\n\r\n         \r\n          \r\n           let keywords = this.state.search.split(\" \");\r\n\r\n          firestore\r\n          .collection(\"SERVICE PROVIDER\")\r\n          .where('tags','array-contains-any',keywords)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n              let servicelist = []\r\n           if(!querySnapshot.empty)\r\n           {\r\n              querySnapshot.forEach((doc) => {\r\n                let data = {\r\n                  id : doc.id,\r\n                  image :doc.data().service_provider_image_1,\r\n                  title : doc.data().service_provider_name,\r\n                  price : doc.data().service_charge,\r\n                }\r\n                \r\n                 servicelist.push(data);\r\n                });\r\n                \r\n           }\r\n           this.setState({\r\n             servicelist,\r\n             searching:false\r\n           })\r\n            \r\n      }).catch((error) =>{\r\n          console.log(error);\r\n          this.setState({\r\n            searching:false\r\n          })\r\n        \r\n      });\r\n  \r\n   \r\n         };\r\n\r\n\r\n        \r\n\r\n      componentDidMount()\r\n      {\r\n          if(this.props.categories===null)\r\n          {\r\n              this.props.loadCategories(()=>{\r\n\r\n                this.props.loadPage(\"HOME\",()=>{\r\n\r\n                    this.setState({loading: false})\r\n                },()=>{\r\n                    //////////error\r\n                    this.setState({loading: false})\r\n                });\r\n                \r\n              },()=>{\r\n                         ////ERROR\r\n                         this.setState({loading: false})\r\n              });\r\n          }else{\r\n            this.setState({loading: false})\r\n          }\r\n      }\r\n\r\n      onFieldChange = (e) =>{\r\n        this.setState({\r\n          [e.target.name] : e.target.value,\r\n          \r\n        });\r\n      }\r\n\r\n      removeImage = index =>{\r\n         let images = this.state.images;\r\n         let colors = this.state.colors;\r\n\r\n        \r\n         images.splice(index, 1);\r\n         colors.splice(index, 1);\r\n           \r\n                 this.setState({\r\n                    images,\r\n                    colors,\r\n                 })\r\n      \r\n      }\r\n\r\n      uploadServiceSection = () => {\r\n        this.setState({\r\n          loading:true\r\n        })\r\n        let data = {\r\n          view_type:this.state.view_type,\r\n          layout_title:this.state.layout_title,\r\n          Index:parseInt(this.state.position),\r\n          layout_background:this.state.Layout_Background,\r\n          services:this.state.selectedServices,\r\n        }\r\n        \r\n        const onComplete = () =>{\r\n          let sections = this.props.categoryPages[this.state.Page]\r\n          sections.push(data);\r\n          sections.sort((a,b)=>a.Index - b.Index)\r\n          \r\n           this.props.addsection(this.state.Page,sections)\r\n\r\n           this.setState({\r\n            position : null,\r\n            images : [],\r\n            view_type : 0,\r\n            colors : [],\r\n            loading:false,\r\n            addDialog:false,\r\n            selectedServices:[],\r\n            layout_title:null,\r\n            Layout_Background:null,\r\n\r\n          });\r\n        };\r\n        firestore.collection(\"CATEGORIES\").doc(this.state.Page).collection(\"PROMOTION\")\r\n        .add(data).\r\n        then(function (doc) {\r\n          data['id'] = doc.id;\r\n          onComplete();\r\n          \r\n         })\r\n        .catch((err)=>{\r\n          this.setState({\r\n            loading:false\r\n          });\r\n        });\r\n      }\r\n\r\n      save = () =>{\r\n\r\n        this.setState({\r\n          positionError:\"\",\r\n          layout_titleError:\"\",\r\n        })\r\n\r\n         if(!this.state.position)\r\n         {\r\n           this.setState({\r\n             positionError:\"Required\"\r\n           })\r\n          return;\r\n         }\r\n         \r\n       switch(this.state.view_type)\r\n       {\r\n         case 0:\r\n           if(this.state.images.length < 3){\r\n             this.setState({\r\n               snackbar:\"Minimum 3 Images required\",\r\n             });\r\n             return;\r\n           }\r\n           let Index = 0;\r\n           let urls = [];\r\n           this.setState({\r\n             loading:true\r\n           })\r\n            this.uploadImages(this.state.images,Index,urls,()=>{\r\n            \r\n              let data = {\r\n                view_type:0,\r\n                number_of_banner:urls.length,\r\n                Index:parseInt(this.state.position),\r\n              }\r\n              for(let x = 0;x < urls.length;x++)\r\n              {\r\n                data[\"banner_\"+(x+1)] = urls[x]\r\n                data[\"banner_\"+(x+1)+\"_background\"] = this.state.colors[x]\r\n              }\r\n              const onComplete = () =>{\r\n                let sections = this.props.categoryPages[this.state.Page];\r\n                  sections.push(data);\r\n                  sections.sort((a,b)=>a.Index - b.Index)\r\n                \r\n                 this.props.addsection(this.state.Page,sections)\r\n\r\n                 this.setState({\r\n                  position : null,\r\n                  images : [],\r\n                  view_type : 0,\r\n                  colors : [],\r\n                  loading:false,\r\n                  addDialog:false,\r\n                  selectedServices:[],\r\n                  layout_title:null,\r\n                  Layout_Background:null,\r\n \r\n                });\r\n              };\r\n             \r\n                firestore\r\n                .collection(\"CATEGORIES\")\r\n                .doc(this.state.Page)\r\n                .collection(\"PROMOTION\")\r\n                .add(data).\r\n                then(function (doc) {\r\n                  data['id'] = doc.id;\r\n                  onComplete();\r\n                 \r\n                })\r\n                .catch((err)=>{\r\n                  this.setState({\r\n                    loading:false\r\n                  });\r\n                });\r\n            });\r\n              \r\n            \r\n           break;\r\n         case 1:\r\n          if(this.state.images.length <1){\r\n            this.setState({\r\n              snackbar:\" Images is required\"\r\n            })\r\n            return;\r\n          }\r\n          let Index2 = 0;\r\n          let urls2 = [];\r\n          this.setState({\r\n            loading:true\r\n          })\r\n           this.uploadImages([this.state.images[0]],Index2,urls2,()=>{\r\n           \r\n             let data = {\r\n               view_type:1,\r\n               strip_ad_banner:urls2[0],\r\n               Index:parseInt(this.state.position),\r\n               background:this.state.colors[0]\r\n             }\r\n             \r\n             const onComplete = () =>{\r\n               let sections = this.props.categoryPages[this.state.Page]\r\n               sections.push(data);\r\n               sections.sort((a,b)=>a.Index - b.Index)\r\n               \r\n                this.props.addsection(this.state.Page,sections)\r\n\r\n               this.setState({\r\n                 position : null,\r\n                 images : [],\r\n                 view_type : 0,\r\n                 colors : [],\r\n                 loading:false,\r\n                 addDialog:false,\r\n                 selectedServices:[],\r\n                 layout_title:null,\r\n                 Layout_Background:null,\r\n\r\n               });\r\n             };\r\n             firestore.collection(\"CATEGORIES\").doc(this.state.Page).collection(\"PROMOTION\")\r\n             .add(data).\r\n             then(function (doc) {\r\n              data['id'] = doc.id;\r\n              onComplete();\r\n              \r\n             })\r\n             .catch((err)=>{\r\n               this.setState({\r\n                 loading:false\r\n               })\r\n             })\r\n           });\r\n           break;\r\n         case 2:\r\n            if(!this.state.layout_title){\r\n              this.setState({\r\n                layout_titleError:\"Required!\"\r\n              })\r\n              return;\r\n            }\r\n            if(this.state.selectedServices.length < 1){\r\n              this.setState({\r\n                snackbar:\"Please select at least 1 service\"\r\n              });\r\n              return;\r\n            }\r\n              \r\n              this.uploadServiceSection()\r\n           break; \r\n         case 3:\r\n          if(!this.state.layout_title){\r\n            this.setState({\r\n              layout_titleError:\"Required!\"\r\n            })\r\n            return;\r\n          }\r\n          if(this.state.selectedServices.length < 4){\r\n            this.setState({\r\n              snackbar:\"Please select at least 4 service\"\r\n            })\r\n            return;\r\n          }\r\n          this.uploadServiceSection()\r\n           break; \r\n           default:  \r\n       }\r\n\r\n      }\r\n\r\n      deleteImages = (images,index,onComplete) =>{\r\n         const deleteAgain = (images,index,onComplete) =>\r\n         this.deleteImages(images,index,onComplete);\r\n\r\n         let splited_link = images[index].split(\"/\");\r\n         let name = splited_link[splited_link.length-1].split(\"?\")[0].replace(\"banners%2F\",\"\");\r\n\r\n         storageRef.child(\"banners/\"+name).delete().then(()=>{\r\n\r\n           index++;\r\n          if(index < images.length){\r\n          deleteAgain(images,index,onComplete);\r\n          }else{\r\n            onComplete();\r\n          }\r\n\r\n         }).catch(err=>{\r\n          this.setState({loading:false})\r\n         })\r\n      }\r\n\r\n      uploadImages = (images,index,urls,onCompleted) =>\r\n      {\r\n        const uploadAgain =  (images,index,urls,onCompleted)=>\r\n        this.uploadImages(images,index,urls,onCompleted);\r\n        let file = images[index]\r\n          \r\n          var ts = String(new Date().getTime()),\r\n              i = 0,\r\n              out = '';\r\n      \r\n          for (i = 0; i < ts.length; i += 2) {\r\n              out += Number(ts.substr(i, 2)).toString(36);\r\n          }\r\n      \r\n         let filename =  'banner' + out;\r\n      \r\n\r\n        var uploadTask = storageRef.child('banners/'+filename+'.jpg').put(file);\r\n\r\n     uploadTask.on('state_changed', function(snapshot){\r\n \r\n  var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n  console.log('Upload is ' + progress + '% done');\r\n  \r\n}, function(error) {\r\n  // Handle unsuccessful uploads\r\n}, function() {\r\n \r\n  uploadTask.snapshot.ref.getDownloadURL().then((downloadURL)=>{\r\n      urls.push(downloadURL);\r\n      index++;\r\n      if(index < images.length){\r\n        uploadAgain(images,index,urls,onCompleted);\r\n      }else{\r\n         onCompleted();\r\n      }\r\n  });\r\n}\r\n  );\r\n\r\n};\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Container maxWidth=\"md\" fixed>\r\n               \r\n              <AppBar position=\"static\" color=\"grey\">\r\n                <Tabs\r\n                  value={this.state.value}\r\n                  onChange={this.handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                  aria-label=\"scrollable auto tabs example\"\r\n                >\r\n                  {this.props.categories?\r\n                  this.props.categories.map((category)=>(\r\n                       \r\n                       <Tab \r\n                       icon={\r\n                       <CategoryTab \r\n                       icon={category.icon} \r\n                       title={category.categoryName} \r\n                       \r\n                       />\r\n                     } \r\n                     onClick={e=>{\r\n                         if(this.props.categoryPages[category.categoryName.toUpperCase()])\r\n                         {\r\n                            this.setState({\r\n                                Page: category.categoryName.toUpperCase()\r\n                            });\r\n                         }\r\n                         else{\r\n                             this.setState({loading:true})\r\n                            this.props.loadPage(category.categoryName.toUpperCase() ,\r\n                            ()=>{\r\n\r\n                                this.setState({loading: false,\r\n                                    Page: category.categoryName.toUpperCase(),})\r\n                            },()=>{\r\n                                //////////error\r\n                                this.setState({loading: false})\r\n                            });\r\n                         }\r\n                        \r\n                     }}\r\n                     />\r\n                  )): null\r\n                    }\r\n                </Tabs>\r\n              </AppBar>\r\n                \r\n             {this.props.categoryPages\r\n             ? this.props.categoryPages[this.state.Page].map((item,indexMain) => {\r\n                 switch(item.view_type)\r\n                 {\r\n                     case 0:\r\n                         let banners = [];\r\n                         let images = [];\r\n                         \r\n                         for(let index = 1; \r\n                            index < (item.number_of_banner + 1); \r\n                            index++\r\n                            )\r\n                         {\r\n                            const banner = item[\"banner_\"+index];\r\n                            const background = item[\"banner_\"+index+\"_background\"];\r\n                            banners.push({ banner , background });\r\n                            images.push(banner);\r\n                            \r\n                         }\r\n                        return <BannerSlider\r\n                         delete={()=>\r\n                          this.setState(\r\n                            {\r\n                            loading:true\r\n                          },\r\n                          this.deleteImages(images,0,()=>{\r\n                           firestore.collection(\"CATEGORIES\").doc(this.state.Page).collection(\"PROMOTION\").\r\n                           doc(item.id).delete().then(()=>{\r\n                            this.props.categoryPages[this.state.Page].splice(indexMain,1);\r\n                            this.setState({\r\n                              loading:false\r\n                            })\r\n                           }).catch(err=>{\r\n                             this.setState({\r\n                               loading:false\r\n                             })\r\n                           })\r\n                        }))} Images={banners} />;\r\n                    case 1:\r\n                        return<StripAdView \r\n                        delete={()=>\r\n                          this.setState(\r\n                            {\r\n                            loading:true\r\n                          },\r\n                          this.deleteImages([item.strip_ad_banner],0,()=>{\r\n\r\n                           firestore.collection(\"CATEGORIES\").doc(this.state.Page).collection(\"PROMOTION\").\r\n                           doc(item.id).delete().then(()=>{\r\n                            this.props.categoryPages[this.state.Page].splice(indexMain,1);\r\n                            this.setState({\r\n                              loading:false\r\n                            })\r\n                           }).catch(err=>{\r\n                             this.setState({\r\n                               loading:false\r\n                             })\r\n                           })\r\n                        }))}\r\n                        image={item.strip_ad_banner} \r\n                        background={item.background}/>;\r\n\r\n                    case 2:\r\n\r\n                    let servicesData = []\r\n\r\n                    if(!item.loaded){\r\n                        item.services.forEach((id,index) => {\r\n\r\n                          firestore.collection(\"SERVICE PROVIDER\").\r\n                          doc(id).get().then(document=>{\r\n                            if(document.exists) {\r\n                            let serviceData = {\r\n                              id:id,\r\n                              title:document.data()[\"service_provider_name\"],\r\n                              subtitle:\"\",\r\n                              image:document.data()[\"service_provider_image_1\"],\r\n                              price:document.data()[\"service_charge\"],\r\n                              \r\n                            }\r\n                            servicesData.push(serviceData)\r\n                            if(index === item.services.length-1)\r\n                            {\r\n                              item.services = servicesData\r\n                              item['loaded'] = true\r\n                              this.setState({});\r\n                            }\r\n                          }\r\n                          }).catch((err)=>{\r\n\r\n                          });\r\n                        \r\n                        });\r\n                      }\r\n\r\n                        // let services = [];\r\n                        // for(let index = 1; \r\n                        //     index < (item.number_of_services + 1); \r\n                        //     index++\r\n                        //     )\r\n                        //  {\r\n\r\n                        //   let  data = {};\r\n                        //    data['title'] =item['service_title_'+index]\r\n                        //    data['subtitle'] =item['service_subtitle_'+index]\r\n                        //    data['charge'] =item['service_charge_'+index]\r\n                        //    data['image'] =item['service_image_'+index]\r\n                        //    services.push(data)\r\n                        //  \r\n                       //   }\r\n                        \r\n                        return ( <HorizontalScroller\r\n                           delete={() => this.setState({\r\n                             loading:true\r\n                           }), ()=> {\r\n                             \r\n                              firestore.collection(\"CATEGORIES\").doc(this.state.Page).collection(\"PROMOTION\").\r\n                           doc(item.id).delete().then(()=>{\r\n                            this.props.categoryPages[this.state.Page].splice(indexMain,1);\r\n                            this.setState({\r\n                              loading:false\r\n                            })\r\n                           }).catch(err=>{\r\n                             this.setState({\r\n                               loading:false\r\n                             });\r\n                           });\r\n                        }}\r\n                  \r\n                           services={item.services} \r\n                           title={item.layout_title} \r\n                           background={item.layout_background}/>  );\r\n\r\n                     case 3:\r\n\r\n                      let gridservicesData = []\r\n\r\n                      if(!item.loaded){\r\n                          item.services.forEach((id,index) => {\r\n  \r\n                            if(index < 4){\r\n\r\n                            firestore.collection(\"SERVICE PROVIDER\").\r\n                            doc(id).get().then(document=>{\r\n                              if(document.exists) {\r\n                              let serviceData = {\r\n                                id:id,\r\n                                title:document.data()[\"service_provider_name\"],\r\n                                subtitle:\"\",\r\n                                image:document.data()[\"service_provider_image_1\"],\r\n                                price:document.data()['service_charge'],\r\n                                \r\n                              }\r\n                              gridservicesData.push(serviceData)\r\n                              if(index === 3)\r\n                              {\r\n                                item.services = gridservicesData\r\n                                item['loaded'] = true\r\n                                this.setState({});\r\n                              }\r\n                            }\r\n                            }).catch((err)=>{\r\n  \r\n                            });\r\n                            }\r\n                          });\r\n                        }\r\n                                 return <GridView \r\n                                 delete={()=> this.setState({\r\n                                  loading:true\r\n                                }), ()=>{\r\n                                  firestore.collection(\"CATEGORIES\").doc(this.state.Page).collection(\"PROMOTION\").\r\n                               doc(item.id).delete().then(()=>{\r\n                                this.props.categoryPages[this.state.Page].splice(indexMain,1);\r\n                                this.setState({\r\n                                  loading:false\r\n                                })\r\n                               }).catch(err=>{\r\n                                 this.setState({\r\n                                   loading:false\r\n                                 });\r\n                               });\r\n                            }}\r\n                                 services={item.services} \r\n                                   title={item.layout_title} \r\n                                   background={item.layout_background} />;\r\n                     default:\r\n                         break;\r\n                 }\r\n             }) \r\n             : null }\r\n             <Fab color=\"primary\" aria-label=\"add\"onClick={(e)=>this.setState({\r\n                  addDialog:true,\r\n             })} style={{position:\"fixed\",bottom:\"50px\",right:\"50px\"}}>\r\n             <Add />\r\n             </Fab>            \r\n              </Container>\r\n\r\n              <Dialog \r\n              fullScreen \r\n              open={this.state.addDialog}\r\n               onClose={e=>this.setState({\r\n                   addDialog:false\r\n               })} \r\n               TransitionComponent={Transition}>\r\n            <AppBar>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={e=>this.setState({\r\n                addDialog:false\r\n            })} aria-label=\"close\"> \r\n              <Close />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" >\r\n              Add Section\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" style={{position:\"absolute\",right:0,}}\r\n            onClick={ (e) => \r\n           this.save()\r\n            }>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n         <Toolbar/>\r\n       <Box padding=\"16px\">\r\n           <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\">VIEW TYPE</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={(e) => { \r\n            console.log(this.state.images)\r\n            this.onFieldChange(e)\r\n             this.setState({\r\n               colors:[],\r\n               images:[],\r\n               selectedServices:[],\r\n             });\r\n          }}\r\n          name=\"view_type\"\r\n          defaultValue={0}\r\n        >\r\n          <MenuItem value={0}>BANNER SLIDER</MenuItem>\r\n          <MenuItem value={1}>STRIP AD</MenuItem>\r\n          <MenuItem value={2}>HORIZONTAL SCROLLER</MenuItem>\r\n          <MenuItem value={3}>GRID VIEW</MenuItem>\r\n        </Select>\r\n       <br/>\r\n        <TextField\r\n          label=\"Position\"\r\n          id=\"outlined-size-small\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          name=\"position\"\r\n          \r\n          error={this.state.positionError !== \"\"}\r\n          helperText={this.state.positionError}\r\n          onChange={this.onFieldChange}\r\n          size=\"small\"\r\n          margin=\"dense\"\r\n         \r\n        />\r\n        </FormControl>\r\n        <br/>\r\n        <Box display=\"flex\" flexWrap=\"true\">\r\n\r\n          { this.state.images.map((item,index)=>(\r\n           <Box margin=\"12px\" >\r\n            <img \r\n            src={ URL.createObjectURL(item) } \r\n            style={{height:\"90px\" ,\r\n             width: this.state.view_type===0?\"160px\":this.state.view_type===1?\"210\":0 , \r\n             objectFit:\"scale-down\", \r\n             backgroundColor:this.state.colors[index],\r\n            }}\r\n            />\r\n            <br/>\r\n            <br/>\r\n            <input \r\n            id={\"contained-button-\"+index} \r\n            type=\"color\" \r\n            hidden\r\n            onChange={e=>{\r\n              let colors = this.state.colors;\r\n              colors[index] = e.target.value;\r\n              this.setState({\r\n                colors\r\n              })\r\n            }}\r\n            defaultValue=\"#000000\"\r\n            />\r\n            <IconButton \r\n            aria-label=\"delete\"\r\n             onClick={(e)=>this.removeImage(index)}\r\n            >\r\n           <Delete />\r\n           <br/>\r\n         </IconButton>\r\n            <label htmlFor={\"contained-button-\"+index}>\r\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n          <ColorLens />\r\n        </IconButton>\r\n      </label>\r\n          </Box>\r\n          ))}\r\n        </Box>\r\n        <br/>\r\n        <input\r\n        accept=\"image/*\"\r\n        id=\"contained-button-file\"\r\n        onChange={(e)=>{\r\n         \r\n          if( e.target.files &&  e.target.files[0] ){\r\n            let images = this.state.images;\r\n            let colors = this.state.colors;\r\n             \r\n            images.push( e.target.files[0]);\r\n            colors.push(\"#ffffff\");\r\n            this.setState({\r\n              images,\r\n            });\r\n            e.target.value = null;\r\n          }\r\n        }}\r\n        name=\"images\"\r\n        hidden\r\n        type=\"file\"\r\n      />\r\n      {this.state.view_type === 0 && this.state.images.length < 8 ? (\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          Add image\r\n        </Button>\r\n      </label>\r\n      ) : null\r\n    }\r\n          {this.state.view_type === 1 && this.state.images.length < 1 ? (\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          Add image\r\n        </Button>\r\n      </label>\r\n      ) : null\r\n    }\r\n    <br/>\r\n      { (this.state.view_type === 2 || this.state.view_type === 3) && \r\n\r\n      <div>\r\n       <Box style={{backgroundColor: this.state.Layout_Background}}>\r\n       <TextField id=\"outlined-basic\" label=\"Title\" variant=\"outlined\"   error={this.state.layout_titleError !== \"\"}\r\n          helperText={this.state.layout_titleError} onChange={this.onFieldChange} name=\"layout_title\"/>\r\n       </Box>\r\n     <input \r\n            id={\"contained-button-title\"} \r\n            type=\"color\" \r\n            hidden\r\n            onChange={this.onFieldChange}\r\n            name=\"Layout_Background\"\r\n            defaultValue=\"#ffffff\"/>\r\n           <label htmlFor={\"contained-button-title\"}>\r\n            <Button color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n          Layout Background\r\n        </Button>\r\n      </label>\r\n      <h4>Select Services :  {this.state.selectedServices.length}</h4>\r\n      <Box display=\"flex\">\r\n      <TextField \r\n     name=\"search\"\r\n     style={{flexGrow:1}}\r\n     onChange={this.onFieldChange}\r\n       label=\"Search\" \r\n       variant=\"outlined\"\r\n        size=\"small\" />\r\n\r\n         <Button variant=\"contained\" color=\"primary\" onClick={this.searchService()}>\r\n           Search\r\n          </Button>\r\n          </Box>\r\n          <br/>\r\n          {this.state.searching ? ( <Box display=\"flex\" justifyContent=\"center\"> <CircularProgress  /> </Box> ) : (\r\n      <Box display=\"flex\" flexWrap=\"true\" bgcolor=\"#00000010\">\r\n        {this.state.servicelist === undefined ?\r\n        this.loadLatestService():\r\n        this.state.servicelist.map((item,index) => (\r\n          <FormControlLabel\r\n          control={<Checkbox onChange={e=>{\r\n            if(e.target.checked)\r\n            {\r\n               this.state.selectedServices.push(item.id)\r\n            }else{\r\n            let posi =  this.state.selectedServices.indexOf(item.id)\r\n            this.state.selectedServices.splice(posi,1)\r\n            }\r\n          }} />}\r\n          label={<ServiceView item={item}/>}\r\n          labelPlacement=\"bottom\"\r\n        />\r\n         ))}\r\n      </Box>\r\n           ) }\r\n           </div>\r\n     }\r\n      </Box>\r\n      </Dialog>\r\n              <Backdrop \r\n              style={{zIndex:1500}}\r\n              open={this.state.loading} \r\n            >\r\n            <CircularProgress color=\"primary\" />\r\n            </Backdrop>\r\n            <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={this.state.snackbar !== \"\"}\r\n        autoHideDuration={1000}\r\n        onClose={\r\n          e=>this.setState({\r\n            snackbar:\"\",\r\n          })\r\n        }\r\n        message={this.state.snackbar}\r\n      />\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport const CategoryTab = ({icon,title}) =>{\r\n    return ( \r\n    <Box textAlign=\"center\">\r\n        { icon !== \"null\"  ? (\r\n        <img src={icon} style={{ height:\"30px\", width: \"30px\" }} /> ) : (<Home/>\r\n        )}\r\n        <Typography variant=\"body2\">\r\n            {title}\r\n            </Typography>\r\n    \r\n    </Box>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        categories: state.categories,\r\n        categoryPages: state.categoryPages,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n     loadCategories: (onSuccess,onError) => \r\n     dispatch(loadCategories(onSuccess,onError)),\r\n     loadPage: \r\n     (category,onSuccess,onError) =>\r\n      dispatch(loadCategoryPage(category,onSuccess,onError)),\r\n     addsection:(page,list)=>dispatch({type : \"LOAD_PAGE\", payload: list, category:page})\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HomeFragment);\r\n\r\n","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\BannerSlidder.js",["132"],"import { IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { MoreVert } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst BannerSlidder = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  \r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const theme = useTheme();\r\n   const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    }; \r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n      };\r\n    \r\n      return (\r\n        <div>\r\n          <div style={{backgroundColor:\"white\",textAlign:\"right\"}}>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVert />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: '20ch',\r\n          },\r\n        }}\r\n      >\r\n       \r\n          \r\n          <MenuItem \r\n           onClick={()=>{\r\n            props.delete();\r\n            handleClose();\r\n            }}\r\n            >\r\n           Delete\r\n          </MenuItem>\r\n      </Menu>\r\n    </div>\r\n          <AutoPlaySwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={activeStep}\r\n            onChangeIndex={handleStepChange}\r\n            enableMouseEvents\r\n          >\r\n            {props.Images.map((step, index) => (\r\n              <div \r\n              key={index}\r\n               style={{\r\n                 width:\"100%\",\r\n               }}\r\n               >\r\n\r\n                {Math.abs(activeStep - index) <= 2 ? (\r\n                  <img \r\n                  style={{width: \"100%\" ,height:\"250px\",objectFit:\"scale-down\",backgroundColor:step.background,}}\r\n                  src={step.banner} \r\n                  alt=\"\"/>\r\n                ) : null}\r\n              </div>\r\n            ))}\r\n          </AutoPlaySwipeableViews>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default BannerSlidder\r\n\r\n","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\ServiceView.js",["133"],"import { Box, Typography } from '@material-ui/core'\r\nimport { green, grey } from '@material-ui/core/colors'\r\nimport React from 'react'\r\n\r\nconst ServiceView = (props) => {\r\n    return (\r\n        <Box p=\"18px\" bgcolor=\"white\" boxShadow=\"8px\" mx=\"4px\" borderRadius=\"16px\">\r\n         <img src={props.item.image} style={{ height: \"120px\" , width: \"120px\" , objectFit:\"scale-down\",backgroundColor:grey[50] }} />\r\n         <Box width=\"110px\" component=\"div\" textOverflow=\"ellipsis\">\r\n            <Typography variant=\"subtitle1\">\r\n            {props.item.title}\r\n            </Typography>\r\n            </Box>\r\n            <Typography variant=\"subtitle2\">\r\n              <span style={{color:green.A700}}> {props.item.subtitle}</span>\r\n            </Typography>\r\n            <Typography variant=\"h6\">Rs.\r\n            {props.item.price}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ServiceView\r\n","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\HorizontalScroller.js",[],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\StripAdView.js",["134"],"import { Box } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { MoreVert } from '@material-ui/icons';\r\n\r\nconst StripAdView = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  }; \r\n\r\n\r\n    return (\r\n        <Box >\r\n            <div style={{backgroundColor:\"white\",textAlign:\"right\"}}>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVert />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: '20ch',\r\n          },\r\n        }}\r\n      >\r\n       \r\n       <MenuItem    onClick={()=>{\r\n            props.edit();\r\n            handleClose();\r\n            }}>\r\n           Edit\r\n          </MenuItem>\r\n          <MenuItem  onClick={()=>{\r\n            props.delete();\r\n            handleClose();\r\n            }}\r\n            >\r\n           Delete\r\n          </MenuItem>\r\n        \r\n      </Menu>\r\n    </div>\r\n            <img style={{height: \"100px\" , width: \"100%\",background: props.background, objectFit:\"scale-down\" ,}} src={props.image} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StripAdView\r\n","C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\GridView.js",[],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Reducers\\categoryReducer.js",[],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Actions\\categoryAction.js",[],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Reducers\\categoryPageReducer.js",[],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Components\\Actions\\categoryPageAction.js",[],"C:\\Users\\ROG\\OneDrive\\Desktop\\Admin aahang\\aahang-admin\\src\\Fragments\\ManageCategoryFragment.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"import { Container } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nexport class ManageCategoryFragment extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container maxWidth=\"md\" fixed>\r\n        \r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ManageCategoryFragment\r\n",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":28,"column":9,"nodeType":"167","endLine":28,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":29,"column":9,"nodeType":"167","endLine":29,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":32,"column":11,"nodeType":"167","endLine":32,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":37,"column":11,"nodeType":"167","endLine":37,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":43,"column":11,"nodeType":"167","endLine":43,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":58,"column":27,"nodeType":"167","messageId":"170","endLine":58,"endColumn":28,"fix":"171"},{"ruleId":"165","severity":1,"message":"166","line":68,"column":18,"nodeType":"167","endLine":68,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":77,"column":19,"nodeType":"167","endLine":77,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":96,"column":14,"nodeType":"174","endLine":96,"endColumn":45},{"ruleId":"172","severity":1,"message":"173","line":70,"column":11,"nodeType":"174","endLine":70,"endColumn":72},{"ruleId":"165","severity":1,"message":"166","line":28,"column":9,"nodeType":"167","endLine":28,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":29,"column":9,"nodeType":"167","endLine":29,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":32,"column":11,"nodeType":"167","endLine":32,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":37,"column":11,"nodeType":"167","endLine":37,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":43,"column":11,"nodeType":"167","endLine":43,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":58,"column":27,"nodeType":"167","messageId":"170","endLine":58,"endColumn":28,"fix":"175"},{"ruleId":"165","severity":1,"message":"166","line":68,"column":18,"nodeType":"167","endLine":68,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":77,"column":19,"nodeType":"167","endLine":77,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":96,"column":14,"nodeType":"174","endLine":96,"endColumn":45},{"ruleId":"161","severity":1,"message":"176","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":17},{"ruleId":"161","severity":1,"message":"177","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":20},{"ruleId":"161","severity":1,"message":"178","line":9,"column":10,"nodeType":"163","messageId":"164","endLine":9,"endColumn":16},{"ruleId":"161","severity":1,"message":"179","line":15,"column":10,"nodeType":"163","messageId":"164","endLine":15,"endColumn":18},{"ruleId":"161","severity":1,"message":"180","line":18,"column":8,"nodeType":"163","messageId":"164","endLine":18,"endColumn":23},{"ruleId":"168","severity":1,"message":"169","line":214,"column":19,"nodeType":"167","messageId":"170","endLine":214,"endColumn":20,"fix":"181"},{"ruleId":"168","severity":1,"message":"169","line":293,"column":27,"nodeType":"167","messageId":"170","endLine":293,"endColumn":28,"fix":"182"},{"ruleId":"168","severity":1,"message":"169","line":350,"column":24,"nodeType":"167","messageId":"170","endLine":350,"endColumn":25,"fix":"183"},{"ruleId":"184","severity":1,"message":"185","line":516,"column":79,"nodeType":"186","messageId":"187","endLine":516,"endColumn":81},{"ruleId":"168","severity":1,"message":"169","line":541,"column":107,"nodeType":"167","messageId":"170","endLine":541,"endColumn":108,"fix":"188"},{"ruleId":"168","severity":1,"message":"169","line":562,"column":107,"nodeType":"167","messageId":"170","endLine":562,"endColumn":108,"fix":"189"},{"ruleId":"168","severity":1,"message":"169","line":584,"column":67,"nodeType":"167","messageId":"170","endLine":584,"endColumn":68,"fix":"190"},{"ruleId":"191","severity":1,"message":"192","line":629,"column":30,"nodeType":"193","messageId":"194","endLine":629,"endColumn":31},{"ruleId":"168","severity":1,"message":"169","line":631,"column":110,"nodeType":"167","messageId":"170","endLine":631,"endColumn":111,"fix":"195"},{"ruleId":"168","severity":1,"message":"169","line":657,"column":69,"nodeType":"167","messageId":"170","endLine":657,"endColumn":70,"fix":"196"},{"ruleId":"191","severity":1,"message":"192","line":685,"column":35,"nodeType":"193","messageId":"194","endLine":685,"endColumn":36},{"ruleId":"168","severity":1,"message":"169","line":686,"column":114,"nodeType":"167","messageId":"170","endLine":686,"endColumn":115,"fix":"197"},{"ruleId":"172","severity":1,"message":"173","line":783,"column":13,"nodeType":"174","endLine":790,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":948,"column":9,"nodeType":"174","endLine":948,"endColumn":68},{"ruleId":"161","severity":1,"message":"198","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":8,"column":10,"nodeType":"174","endLine":8,"endColumn":135},{"ruleId":"172","severity":1,"message":"173","line":55,"column":13,"nodeType":"174","endLine":55,"endColumn":135},{"ruleId":"161","severity":1,"message":"176","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":17},{"ruleId":"161","severity":1,"message":"199","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":12},{"ruleId":"161","severity":1,"message":"200","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":17},{"ruleId":"161","severity":1,"message":"177","line":5,"column":19,"nodeType":"163","messageId":"164","endLine":5,"endColumn":29},{"ruleId":"161","severity":1,"message":"201","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":13},{"ruleId":"161","severity":1,"message":"202","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":17},{"ruleId":"161","severity":1,"message":"203","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":17},{"ruleId":"161","severity":1,"message":"204","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":22},{"ruleId":"161","severity":1,"message":"205","line":10,"column":8,"nodeType":"163","messageId":"164","endLine":10,"endColumn":17},{"ruleId":"161","severity":1,"message":"206","line":11,"column":8,"nodeType":"163","messageId":"164","endLine":11,"endColumn":23},{"ruleId":"161","severity":1,"message":"207","line":12,"column":8,"nodeType":"163","messageId":"164","endLine":12,"endColumn":16},{"ruleId":"161","severity":1,"message":"208","line":13,"column":8,"nodeType":"163","messageId":"164","endLine":13,"endColumn":22},{"ruleId":"161","severity":1,"message":"209","line":14,"column":8,"nodeType":"163","messageId":"164","endLine":14,"endColumn":15},{"ruleId":"161","severity":1,"message":"210","line":15,"column":8,"nodeType":"163","messageId":"164","endLine":15,"endColumn":18},{"ruleId":"161","severity":1,"message":"211","line":16,"column":8,"nodeType":"163","messageId":"164","endLine":16,"endColumn":13},{"ruleId":"161","severity":1,"message":"212","line":17,"column":8,"nodeType":"163","messageId":"164","endLine":17,"endColumn":16},{"ruleId":"161","severity":1,"message":"213","line":18,"column":8,"nodeType":"163","messageId":"164","endLine":18,"endColumn":18},{"ruleId":"161","severity":1,"message":"214","line":19,"column":8,"nodeType":"163","messageId":"164","endLine":19,"endColumn":15},{"ruleId":"161","severity":1,"message":"215","line":20,"column":8,"nodeType":"163","messageId":"164","endLine":20,"endColumn":24},{"ruleId":"161","severity":1,"message":"216","line":21,"column":8,"nodeType":"163","messageId":"164","endLine":21,"endColumn":14},{"ruleId":"161","severity":1,"message":"217","line":22,"column":8,"nodeType":"163","messageId":"164","endLine":22,"endColumn":18},{"ruleId":"161","severity":1,"message":"218","line":23,"column":8,"nodeType":"163","messageId":"164","endLine":23,"endColumn":22},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","dot-location","Expected dot to be on same line as property.","expectedDotBeforeProperty",{"range":"221","text":"222"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"223","text":"222"},"'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'Avatar' is defined but never used.","'Category' is defined but never used.","'categoryReducer' is defined but never used.",{"range":"224","text":"225"},{"range":"226","text":"227"},{"range":"228","text":"229"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"range":"230","text":"231"},{"range":"232","text":"231"},{"range":"233","text":"234"},"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",{"range":"235","text":"231"},{"range":"236","text":"237"},{"range":"238","text":"239"},"'blueGrey' is defined but never used.","'clsx' is defined but never used.","'lighten' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","'TableSortLabel' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","no-global-assign","no-unsafe-negation",[1556,1573],"\r\n              .",[1556,1573],[6331,6342],"\r\n        .",[8592,8611],"\r\n                .",[10376,10392],"\r\n             .",[16730,16760],"\r\n                           .",[17700,17730],[18568,18597],"\r\n                          .",[20747,20777],[21763,21794],"\r\n                            .",[23197,23231],"\r\n                               ."]